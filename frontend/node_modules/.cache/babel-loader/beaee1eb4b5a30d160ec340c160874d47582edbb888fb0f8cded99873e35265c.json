{"ast":null,"code":"var _jsxFileName = \"/Users/puja/Documents/React Projects/router-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const data = useRouteLoaderData('event-id');\n  const eventData = data.event;\n  console.log(\"eventData\", eventData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: eventData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    return json({\n      message: 'Unable to fetch Event Details'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","eventData","event","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/puja/Documents/React Projects/router-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\"\nimport EventItem from \"../components/EventItem\";\n\nexport default function EventDetail() {\n    const data = useRouteLoaderData('event-id');\n    const eventData = data.event;\n    console.log(\"eventData\",eventData)\n    return (\n        <>\n            <EventItem event={eventData} />\n        </>\n    )\n}\n\nexport async function loader({request, params}) {\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id);\n    if (!response.ok) {\n        return json({ message: 'Unable to fetch Event Details' }, {\n            status: 500\n        })\n    } else {\n        return response\n    }\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,UAAU,CAAC;EAC3C,MAAMS,SAAS,GAAGD,IAAI,CAACE,KAAK;EAC5BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACH,SAAS,CAAC;EAClC,oBACIN,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACIV,OAAA,CAACF,SAAS;MAACS,KAAK,EAAED;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACjC,CAAC;AAEX;AAACV,EAAA,CATuBD,WAAW;EAAA,QAClBN,kBAAkB;AAAA;AAAAkB,EAAA,GADXZ,WAAW;AAWnC,OAAO,eAAea,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO3B,IAAI,CAAC;MAAE4B,OAAO,EAAE;IAAgC,CAAC,EAAE;MACtDC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}