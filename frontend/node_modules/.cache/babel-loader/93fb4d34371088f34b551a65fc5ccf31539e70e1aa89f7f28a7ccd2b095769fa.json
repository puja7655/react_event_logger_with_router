{"ast":null,"code":"var _jsxFileName = \"/Users/puja/Documents/React Projects/router-project/frontend/src/pages/Event.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Event() {\n  _s();\n  const [fetchedData, setFectchedData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:8080/events');\n        if (!response.ok) {\n          throw new Error(response.message || 'unable to fetch Events');\n        } else {\n          const resData = await response.json();\n          setFectchedData(resData.events);\n        }\n      } catch (error) {\n        setError(error || 'unable to get Data');\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), !isLoading && fetchedData && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n}\n_s(Event, \"msdX+h97XJmq2V9UkMPsJww05hg=\");\n_c = Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["useState","useEffect","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","Event","_s","fetchedData","setFectchedData","isLoading","setIsLoading","error","setError","fetchData","response","fetch","ok","Error","message","resData","json","events","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/puja/Documents/React Projects/router-project/frontend/src/pages/Event.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport EventsList from \"../components/EventsList\";\n\nexport default function Event() {\n    const [fetchedData, setFectchedData] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        async function fetchData() {\n            setIsLoading(true)\n            try {\n                const response = await fetch('http://localhost:8080/events');\n                if (!response.ok) {\n                    throw new Error(response.message || 'unable to fetch Events')\n                } else {\n                    const resData = await response.json();\n                    setFectchedData(resData.events)\n                }\n            } catch (error) {\n                setError(error || 'unable to get Data')\n            }\n            setIsLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    return (\n\n        <>\n            <div style={{ textAlign: 'center' }}>\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n            </div>\n            {!isLoading && fetchedData && <EventsList events={fetchedData} />}\n        </>\n    )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ,eAAec,SAASA,CAAA,EAAG;MACvBH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,OAAO,IAAI,wBAAwB,CAAC;QACjE,CAAC,MAAM;UACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACrCZ,eAAe,CAACW,OAAO,CAACE,MAAM,CAAC;QACnC;MACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,IAAI,oBAAoB,CAAC;MAC3C;MACAD,YAAY,CAAC,KAAK,CAAC;IACvB;IACAG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEIX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,GAC/Bb,SAAS,iBAAIP,OAAA;QAAAoB,QAAA,EAAG;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9BjB,KAAK,iBAAIT,OAAA;QAAAoB,QAAA,EAAIX;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACL,CAACnB,SAAS,IAAIF,WAAW,iBAAIL,OAAA,CAACF,UAAU;MAACqB,MAAM,EAAEd;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACnE,CAAC;AAEX;AAACtB,EAAA,CAlCuBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}